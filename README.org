* logseq-to-orgroam2 via python
code quality is only for informational purpose just i would call it stackoverfloware

** markdown to org
*** using file as source
#+begin_src python
from init import md_to_org
import os

input_file = os.getcwd() + '/test/logseq-graph/pages/anything.md'
return md_to_org(input_file)
#+end_src

#+RESULTS:
: - note to [[2024-10-19 Saturday]]
*** using string as content

#+begin_src python
from init import md_to_org_content

md_text = '''test
- [Hrac](https://abecs.url)
'''
return md_to_org_content(md_text)
#+end_src

#+RESULTS:
: test - [[https://abecs.url][Hrac]]
** convert org-roam links
*** find links with regex
#+begin_src python
import re

ret = re.findall(r'\[\[([^\]]+)\]\]', '- [[Player]] [[Tom]] [[more words]]')

return ret
#+end_src

#+RESULTS:
| Player | Tom | more words |

*** using replace
#+begin_src python
ret = 'test'
# ret = ret.replace('es', 'at')
ret.replace('es', 'at')
return ret
#+end_src

#+RESULTS:
: test

*** test function

#+begin_src python
import uuid
import os
from pathlib import Path
from init import prepare_org_roam

input_file = os.getcwd() + '/test/logseq-graph/pages/anything.md'
content = 'something to test'
node_title = Path(input_file).stem
node_id = (uuid.uuid4())  # generate item unique id
return prepare_org_roam(node_title, node_id, content)
#+end_src

#+RESULTS:
:
:     :PROPERTIES:
:     :ID:       09e928e6-318e-48c2-b14f-402257c3a12f
:     :END:
:     #+TITLE: anything
:     something to test

*** test for directory
#+begin_src python
from init import prepare_org_roam

files_org_content = {
'item1': {'content': '[[item2]] [[item3]]', 'id': '97581db1'},
'item2': {'content': 'jkl', 'id': 'a084dd1b'},
'item3': {'content': '[[item2]]', 'id': '6a89bfd6'}
}

files_header = {
        k: {**v, 'content': prepare_org_roam(k, v['id'], v['content'])}
        for k, v in files_org_content.items()}

return files_header
#+end_src

#+RESULTS:
: {'item1': {'content': '\n    :PROPERTIES:\n    :ID:       97581db1\n    :END:\n    #+TITLE: item1\n    [[item2]] [[item3]]', 'id': '97581db1'}, 'item2': {'content': '\n    :PROPERTIES:\n    :ID:       a084dd1b\n    :END:\n    #+TITLE: item2\n    jkl', 'id': 'a084dd1b'}, 'item3': {'content': '\n    :PROPERTIES:\n    :ID:       6a89bfd6\n    :END:\n    #+TITLE: item3\n    [[item2]]', 'id': '6a89bfd6'}}

** new file name
#+begin_src python
from init import pages_newname
import os
return pages_newname('test A',os.getcwd() + '/org-roam')
#+end_src

#+RESULTS:
: /home/jan/repos/b3tchi/logseq-to-org/main/org-roam/20241019091010-test_a.org

** running over test graph

#+begin_src python
from init import main
import os
source_dir = os.getcwd() + '/test/logseq-graph'
return main(source_dir)
#+end_src

#+RESULTS:
: /home/jan/repos/b3tchi/logseq-to-org/main/test/logseq-graph-2024102315351729690500

** journal name
#+begin_src python
from init import journal_name
original_name = '2024_10_12'
return (journal_name(original_name))
#+end_src

#+RESULTS:
: 2024-10-12 Saturday

#+begin_src python
return str('2024-10-12 Saturday')[:11]
#+end_src
#+RESULTS:
: 2024-10-12

#+begin_src python
import os
from pathlib import Path
from init import journal_name
# get journals
files = {}
journals_dir = Path(os.getcwd() + '/test/logseq-graph/journals/')
for file in journals_dir.iterdir():
    name = journal_name(file.stem)
    files[name] = {}
    files[name]['path'] = str(journals_dir) + '/' +file.name
    files[name]['ext'] = file.suffix.replace('.', '')
    files[name]['source'] = 'journals'
return files
#+end_src

#+RESULTS:
: {'2024-10-19 Saturday': {'path': '/home/jan/repos/b3tchi/logseq-to-org/main/test/logseq-graph/journals/2024_10_19.md', 'ext': 'md', 'source': 'journals'}}

* Recipe psudo-code works
- list pages and journal to on dictionary
- load content to dictionary
- covert all md files to org via pandoc
- add id to all files
  - +variant-a ids via org-roam `(org-id-store-link)`+
  - variant-b via code custom id
- add roam properies and title according to orginal file name
- parse all content for ids and replace links with roam variant
- write all files to target location
- sync database `org-roam-db-sync`
